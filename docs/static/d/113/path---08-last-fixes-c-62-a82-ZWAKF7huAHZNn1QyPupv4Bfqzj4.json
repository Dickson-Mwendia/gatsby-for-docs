{"data":{"site":{"siteMetadata":{"title":"Gatsby gitbook tutorial","docsLocation":"https://github.com/joolfe/gatsby-for-docs/tree/master/content"}},"mdx":{"fields":{"id":"8c6a553e-f408-57f8-9704-94289497b4a6","title":"Fixing template","slug":"/08-last-fixes"},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Fixing template\",\n  \"metaTitle\": \"Last fixes in our web\",\n  \"metaDescription\": \"We need to fix the last errors in our tutorial web.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Even if the template we have choose is greate there are some errors in the code that we will fix next \"), mdx(\"h1\", null, \"The strange character in header\"), mdx(\"p\", null, \"After change the styles, colors, logo... a strange character start appearing in the header, look the image:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/gatsby-for-docs/doc-img/strange-character-logo-015bb39aef7bc358eaaa9ba2f6e6be95.png\",\n    \"alt\": \"img\"\n  }))), mdx(\"p\", null, \"You can see a character \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"}\"), \" at the end of the header \\uD83D\\uDE23.\\nLet us review the header code to see whats happen, for this we go to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/components/Header.js\"), \" file and just having a look around the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GitHubButton\"), \" we see thare are a orphan \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"}\"), \" character \\uD83D\\uDE11, we remove and thats all!\"), mdx(\"p\", null, \"If we review the original github template (or starter) in the demo we can also see this error\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/gatsby-for-docs/doc-img/original-demo-error-31a2a02c2c95affc5a5b22e04350940a.png\",\n    \"alt\": \"Original demo error\"\n  }))), mdx(\"p\", null, \"So is nothing related with our changes \\uD83D\\uDE1C, we probabily can do a merge request to fix this in the original repo but this is not part of this tutorial...\"), mdx(\"br\", null), mdx(\"h1\", null, \"Right menu navigation\"), mdx(\"p\", null, \"If try to use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"right side menu bar\"), \" links to navigate inside a page, we notice that don't work \\uD83D\\uDE30, for example testing in local in our page \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:8000/05-fixing-improving\"), \" when click on the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Google analytics\"), \" link we can see that url changes for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:8000/05-fixing-improving#Google%20analytics\"), \" but the scroll don't change... Is easy to imaging that spaces translated to HTML as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"%20\"), \" are the problem.\"), mdx(\"p\", null, \"This kind of links are also known as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Bookmarks\"), \", you can read more about this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3schools.com/html/html_links.asp\"\n  }), \"here\"), \", and seems to don't accept spaces so to solve this we are going to change spaces for underscores like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_\"), \".\"), mdx(\"p\", null, \"We need to change in two places:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In Nav bar: File \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src/components/rightSidebar.js\"), \", to make links point to anchor with underscores.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In Headers: File \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src/components/mdxComponents/\"), \", the id should be the same as the link.\")), mdx(\"p\", null, \"For both we are going to use the method \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".replace(/\\\\s+/g,\\\"_\\\")\"), \" to replace spaces for underscores.\"), mdx(\"p\", null, \"Again this error is not related with our changes, maybe another merge request here?\"), mdx(\"br\", null), mdx(\"h1\", null, \"Menu size\"), mdx(\"p\", null, \"After use the web we can see that left side menu change the size depending of the content of the page, have a look to this images:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/gatsby-for-docs/doc-img/menu-example-1-305e2078f0afc1ea8aa7bb0f994cc475.png\",\n    \"alt\": \"Menu example 1\"\n  }))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/gatsby-for-docs/doc-img/menu-example-2-d266cbd23b2eee463d3d1cd63573b7fb.png\",\n    \"alt\": \"Menu example 2\"\n  }))), mdx(\"p\", null, \"After review css code we see that is a template issue again (not our error \\uD83D\\uDE1C), is trying to use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3schools.com/css/css3_flexbox.asp\"\n  }), \"FlexBox\"), \" feature but not with too sucess...\"), mdx(\"p\", null, \"We need to change the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flex\"), \" values in the layout items (left nav ba, main content and right nav bar) to fix this issue. \"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flex\"), \" css property is a shorthand property for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flex-grow\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flex-shrink\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flex-basis\"), \", and\\nusing google DevTools we can play with this values to see what is the best for our case.\"), mdx(\"p\", null, \"After some testing we have decide to put:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Left navbar: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"flex: 1 0 18%\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Main content: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"flex: 1 0 68%\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rigth navbar: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"flex: 1 0 14%\"))), mdx(\"p\", null, \"We need to add this changes in the file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/components/layout.js\"), \", the layout is code looks like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const Layout = ({ children, location }) => (\\n  <ThemeProvider location={location}>\\n    <MDXProvider components={mdxComponents}>\\n      <Wrapper>\\n        <LeftSideBarWidth className={'hidden-xs'}>\\n          <Sidebar location={location} />\\n        </LeftSideBarWidth>\\n        <Content>\\n          <MaxWidth>{children}</MaxWidth>\\n        </Content>\\n        <RightSideBarWidth className={'hidden-xs'}>\\n          <RightSidebar location={location} />\\n        </RightSideBarWidth>\\n      </Wrapper>\\n    </MDXProvider>\\n  </ThemeProvider>\\n);\\n\")), mdx(\"p\", null, \"And we can find above in this file the definition of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LeftSideBarWidth\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Content\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RightSideBarWidth\"), \" here is where we need to put our css and our layout will work like a charm! \\u2728\"), mdx(\"br\", null), mdx(\"h1\", null, \"Code blocks\"), mdx(\"p\", null, \"Another strange behaviour in our template is sintax higligth in the code blocks, for exmaple look the next picture:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/gatsby-for-docs/doc-img/code-blocks-sintax-d80e02a91d9d25f92144d602bb596533.png\",\n    \"alt\": \"Code block sintax\"\n  }))), mdx(\"p\", null, \"In our markdown file we have indicate the language in the code block using the sintax \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\xB4\\xB4\\xB4bash\"), \", but don't have too much sense that words \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"new\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"for\"), \" are in blue... seems like code block is higlight as java or javascript code even if we have indicate the language \\uD83D\\uDE1E.\"), mdx(\"p\", null, \"Let us have look to the code, is easy to find that file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/components/mdxComponents/codeBlocks.js\"), \" is our candidate and after a quick review we see that our starter is using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://prismjs.com/\"\n  }), \"prism\"), \", a well known syntax highlighter component, more concretely what is being used is a react render component, see the import sentence:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"    import Highlight, { defaultProps } from \\\"prism-react-renderer\\\";\\n\")), mdx(\"p\", null, \"And we cannot forget that at the top of that the template is using a mdx parser for get the markdown and generate the static content, after a few searchs in google we found this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://mdxjs.com/guides/syntax-highlighting/\"\n  }), \"page\"), \", seems to be exactly what our gatsby starter is doing, and comparing the code we can see the probelm:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"    <Highlight\\n        {...defaultProps}\\n        code={exampleCode}\\n        language=\\\"javascript\\\"\\n        theme={prismTheme}\\n        >\\n\")), mdx(\"p\", null, \"In \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Highlight\"), \" component the language parameter is hardcode to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\\"javascrpit\\\"\"), \", thats the problem \\uD83D\\uDE0F. Just reading a little more the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://mdxjs.com/guides/syntax-highlighting/\"\n  }), \"mdx docs\"), \" we see a solution, we need to get the language from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"className\"), \" using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"const language = className.replace(/language-/, '')\"), \".\"), mdx(\"p\", null, \"After some test we have see that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"className\"), \" is not directly in the method, is a value inside the object \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"props[]\"), \" and also sometimes the value is not present so we have create a conditional definition to use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\\"javascrpit\\\"\"), \" when className is not defined, so the code finally looks like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const language = props[\\\"className\\\"] ? props[\\\"className\\\"].replace(/language-/, '') : \\\"javascript\\\";\\n    return (\\n      <Highlight\\n        {...defaultProps}\\n        code={exampleCode}\\n        language={language}\\n        theme={prismTheme}\\n      >\\n\")), mdx(\"p\", null, \"Another fixed issue, great job!\"));\n}\nMDXContent.isMDXComponent = true;"},"tableOfContents":{"items":[{"url":"#the-strange-character-in-header","title":"The strange character in header"},{"url":"#right-menu-navigation","title":"Right menu navigation"},{"url":"#menu-size","title":"Menu size"},{"url":"#code-blocks","title":"Code blocks"}]},"parent":{"__typename":"File","relativePath":"08-last-fixes.md"},"frontmatter":{"metaTitle":"Last fixes in our web","metaDescription":"We need to fix the last errors in our tutorial web."}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/01-introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/02-setup-environment","title":"Set up environment"}}},{"node":{"fields":{"slug":"/07-index-page","title":"Index page"}}},{"node":{"fields":{"slug":"/08-last-fixes","title":"Fixing template"}}},{"node":{"fields":{"slug":"/05-fixing-improving","title":"Improvements and adjustments"}}},{"node":{"fields":{"slug":"/03-new-project","title":"Creating our new project"}}},{"node":{"fields":{"slug":"/","title":"Gatsby gitbook tutorial"}}},{"node":{"fields":{"slug":"/04-publishing-content","title":"Publishing our content"}}},{"node":{"fields":{"slug":"/06-changing-style","title":"Changing the style"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"8c6a553e-f408-57f8-9704-94289497b4a6"}}